import React from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import paymentService from '../services/paymentService';

const OrderSuccessPage = () => {
  const location = useLocation();
  const navigate = useNavigate();
  
  // Get order data from navigation state
  const { orderId, paymentId, total, paymentMethod, paymentStatus, fromCallback } = location.state || {};

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(price);
  };

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-2xl mx-auto px-4">
        <div className="bg-white rounded-lg shadow-sm p-8 text-center">
          {/* Success Icon */}
          <div className="w-20 h-20 mx-auto mb-6 bg-green-100 rounded-full flex items-center justify-center">
            <svg className="w-10 h-10 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
            </svg>
          </div>

          {/* Success Message */}
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            ƒê·∫∑t h√†ng th√†nh c√¥ng!
          </h1>
          
          <p className="text-gray-600 mb-6">
            C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t h√†ng. Ch√∫ng t√¥i s·∫Ω x·ª≠ l√Ω ƒë∆°n h√†ng c·ªßa b·∫°n trong th·ªùi gian s·ªõm nh·∫•t.
          </p>

          {/* Order Details */}
          {orderId && (
            <div className="bg-gray-50 rounded-lg p-6 mb-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-left">
                <div>
                  <p className="text-sm text-gray-600">M√£ ƒë∆°n h√†ng</p>
                  <p className="font-semibold text-gray-900">#{orderId.slice(-8)}</p>
                </div>
                {paymentId && (
                  <div>
                    <p className="text-sm text-gray-600">M√£ thanh to√°n</p>
                    <p className="font-semibold text-gray-900">#{paymentId.slice(-8)}</p>
                  </div>
                )}
                {total && (
                  <div>
                    <p className="text-sm text-gray-600">T·ªïng ti·ªÅn</p>
                    <p className="font-semibold text-blue-600">{formatPrice(total)}</p>
                  </div>
                )}
                {paymentMethod && (
                  <div>
                    <p className="text-sm text-gray-600">Ph∆∞∆°ng th·ª©c thanh to√°n</p>
                    <p className="font-semibold text-gray-900">
                      {paymentService.getPaymentMethodDisplayName(paymentMethod)}
                    </p>
                  </div>
                )}
              </div>

              {/* Payment Status */}
              {paymentStatus && (
                <div className="mt-4 pt-4 border-t border-gray-200">
                  <div className="flex items-center justify-between">
                    <p className="text-sm text-gray-600">Tr·∫°ng th√°i thanh to√°n</p>
                    <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                      paymentService.getPaymentStatusInfo(paymentStatus).color
                    } ${paymentService.getPaymentStatusInfo(paymentStatus).bgColor}`}>
                      {paymentService.getPaymentStatusInfo(paymentStatus).name}
                    </span>
                  </div>
                </div>
              )}
            </div>
          )}

          {/* Information */}
          <div className="bg-blue-50 rounded-lg p-4 mb-6 text-left">
            <h3 className="font-medium text-blue-900 mb-2">Th√¥ng tin quan tr·ªçng:</h3>
            <ul className="text-sm text-blue-800 space-y-1">
              {fromCallback ? (
                <>
                  <li>‚Ä¢ Thanh to√°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n th√†nh c√¥ng</li>
                  <li>‚Ä¢ Ch√∫ng t√¥i s·∫Ω g·ª≠i email x√°c nh·∫≠n trong v√≤ng 15 ph√∫t</li>
                  <li>‚Ä¢ ƒê∆°n h√†ng s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω ngay l·∫≠p t·ª©c</li>
                </>
              ) : (
                <>
                  <li>‚Ä¢ Ch√∫ng t√¥i s·∫Ω g·ª≠i email x√°c nh·∫≠n ƒë∆°n h√†ng trong v√≤ng 15 ph√∫t</li>
                  <li>‚Ä¢ ƒê∆°n h√†ng s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω trong 1-2 ng√†y l√†m vi·ªác</li>
                  {paymentMethod === 'cash' && (
                    <li>‚Ä¢ Vui l√≤ng chu·∫©n b·ªã ti·ªÅn m·∫∑t khi nh·∫≠n h√†ng</li>
                  )}
                </>
              )}
              <li>‚Ä¢ B·∫°n c√≥ th·ªÉ theo d√µi tr·∫°ng th√°i ƒë∆°n h√†ng trong m·ª•c "ƒê∆°n h√†ng c·ªßa t√¥i"</li>
            </ul>
          </div>

          {/* Action Buttons */}
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <button
              onClick={() => navigate('/orders')}
              className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium"
            >
              Xem ƒë∆°n h√†ng c·ªßa t√¥i
            </button>
            <button
              onClick={() => navigate('/')}
              className="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors font-medium"
            >
              Ti·∫øp t·ª•c mua s·∫Øm
            </button>
          </div>

          {/* Contact Support */}
          <div className="mt-8 pt-6 border-t border-gray-200">
            <p className="text-sm text-gray-600 mb-2">
              C·∫ßn h·ªó tr·ª£? Li√™n h·ªá v·ªõi ch√∫ng t√¥i
            </p>
            <div className="flex justify-center space-x-4 text-sm">
              <a href="tel:1900-1234" className="text-blue-600 hover:text-blue-700">
                üìû 1900-1234
              </a>
              <a href="mailto:support@example.com" className="text-blue-600 hover:text-blue-700">
                ‚úâÔ∏è support@example.com
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default OrderSuccessPage;
